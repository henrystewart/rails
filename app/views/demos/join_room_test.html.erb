<h1>Join room test</h1>
<h4>A simple test that checks if your server is properly configured to allow users to join XirSys rooms</h4>

<p>Link this test to yourself or a friend:<br>
  <%= link_to request.host + demo_path('join_room_test'), demo_path('join_room_test') %>
<p>

<% if @show_form %>
  <form class="form-horizontal">
    <div class="control-group">
      <label for="room" class="control-label">Room</label>
      <div class="controls">
        <input type="text" id="room" name="room" value="default"/>
      </div>
    </div>
    <div class="control-group">
      <label for="username" class="control-label">Username</label>
      <div class="controls">
        <input type="text" id="username" name="username" value="<%= @username %>"/>
      </div>
    </div>
    <br>
    <input type="submit" value="Test" class="btn btn-primary btn-large"/>
  </form>
<% else %>

  <form class="form-horizontal">
    <div class="control-group">
      <label for="userlist" class="control-label">Users in this room</label>
      <div class="controls">
        <ul id="userlist">
        </ul>
      </div>
    </div>
  </form>

  <script type="text/javascript">

		$(document).ready(function() {

      // initialise utilsJoinRoomTest object
			utilsJoinRoomTest.init();
      
			/**********************************
			 *
			 *   Handles join button click
			 *
			 **********************************/

				// success and fail handlers for users local video/audio stream allocation
				var getMediaSuccess = function (stream) {
					utilsJoinRoomTest.addVideo({ stream: stream, isLocalStream: true, userId: gon.username });
					utilsJoinRoomTest.localMediaStream( stream );
				};
				var getMediaFailed = function (err) {
					console.log('Get media stream error. ', err);
				};

				// request the local video and audio stream
				utilsJoinRoomTest.getUserMedia(
					{ video: true, audio: true },
					getMediaSuccess,
					getMediaFailed
				);

				// room information object / container
				var roomInfo = {
          name: gon.room
				};


				// create XirSys objects needed to initialise a room
				utilsJoinRoomTest.room( new xRtc.Room(roomInfo) );
      
				// assign events for updating the rooms user list
				utilsJoinRoomTest.room().on( xRtc.Room.events.usersUpdated, utilsJoinRoomTest.refreshRoom )
							.on( xRtc.Room.events.userConnected, utilsJoinRoomTest.refreshRoom )
							.on( xRtc.Room.events.userDisconnected, utilsJoinRoomTest.refreshRoom )
							.on( xRtc.Room.events.connectionDeclined, utilsJoinRoomTest.refreshRoom )
							// more events for accepting a call and handling connection creation
							.on( xRtc.Room.events.incomingConnection, utilsJoinRoomTest.acceptCall )
							.on( xRtc.Room.events.connectionCreated, utilsJoinRoomTest.connectionCreated );

				// map all other default events
				utilsJoinRoomTest.subscribe( utilsJoinRoomTest.room(), xRtc.Room.events );

        

				// Enter / open room
				utilsJoinRoomTest.room().enter(gon.username, { autoReply: false });

			/**********************************
			 *
			 *   Handles connect button click
			 *
			 **********************************/
			$("#connect").click(function (e) {
				e.preventDefault();
				// get username of remote peer
				var contact = $("#userlist").val();
				console.log('Connecting to participant...', contact);
				// connect to remote peer
        utilsJoinRoomTest.room().connect(contact, { createDataChannel: 'auto' });
			});

		});

	</script>

<% end %>
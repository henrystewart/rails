<h1>Many-to-many video</h1>
<h4>A simple many-to-many video demo that connects to users dynamically</h4>

<p>Link this demo to yourself or a friend:<br>
  <%= link_to request.host + demo_path('many_to_many_text'), demo_path('many_to_many_text') %>
<p>

<% if @show_form %>
  <form class="form-horizontal">
    <div class="control-group">
      <label for="room" class="control-label">Room</label>
      <div class="controls">
        <input type="text" id="room" name="room" value="default"/>
      </div>
    </div>
    <div class="control-group">
      <label for="username" class="control-label">Username</label>
      <div class="controls">
        <input type="text" id="username" name="username" value="<%= @username %>"/>
      </div>
    </div>
    <br>
    <input type="submit" value="Join" class="btn btn-primary btn-large"/>
  </form>
<% else %>

  <form class="form-horizontal">
    <div class="control-group">
      <label for="userlist" class="control-label">Other users in this room</label>
      <div class="controls">
        <ul id="userlist">
        </ul>
      </div>
    </div>
    <button id="connect" class="btn btn-primary btn-large">Connect</button>
  </form>

  <br>

  <!-- Text chat -->
  <div id="container-text" class="text-chat">

    <div id="chatwindow-outer" class="text-chat">
      <div id="chatwindow" class="text-chat">
      </div>
    </div>
    
    <div id="bottom" class="text-chat">
      <input id="message" type="text" name="input" class="text-chat"></input><button id="send" class="btn btn-success btn-large text-chat">Send</button>
    </div>
  </div>

  <script type="text/javascript">

		$(document).ready(function() {

      // initialise utilsManyToManyText object
			utilsManyToManyText.init();
      
				// success and fail handlers for users local video/audio stream allocation
				var getMediaSuccess = function (stream) {
					utilsManyToManyText.addVideo({ stream: stream, isLocalStream: true, userId: gon.username });
					utilsManyToManyText.localMediaStream( stream );
				};
				var getMediaFailed = function (err) {
					console.log('Get media stream error. ', err);
				};

				// request the local video and audio stream
				utilsManyToManyText.getUserMedia(
					{ video: true, audio: true },
					getMediaSuccess,
					getMediaFailed
				);

				// room information object / container
				var roomInfo = {
          name: gon.room
				};


				// create XirSys objects needed to initialise a room
				utilsManyToManyText.room( new xRtc.Room(roomInfo) );
      
				// assign events for updating the rooms user list
				utilsManyToManyText.room().on( xRtc.Room.events.usersUpdated, utilsManyToManyText.refreshRoom )
							.on( xRtc.Room.events.userConnected, utilsManyToManyText.refreshRoom )
							.on( xRtc.Room.events.userDisconnected, utilsManyToManyText.refreshRoom )
							.on( xRtc.Room.events.connectionDeclined, utilsManyToManyText.refreshRoom )
							// more events for accepting a call and handling connection creation
							.on( xRtc.Room.events.incomingConnection, utilsManyToManyText.acceptCall )
							.on( xRtc.Room.events.connectionCreated, utilsManyToManyText.connectionCreated );

				// map all other default events
				utilsManyToManyText.subscribe( utilsManyToManyText.room(), xRtc.Room.events );

        

				// Enter / open room
				utilsManyToManyText.room().enter(gon.username, { autoReply: false });

			/**********************************
			 *
			 *   Handles connect button click
			 *
			 **********************************/
			$("#connect").click(function (e) {
				e.preventDefault();
				// get username of remote peer
        
        // Grab room participants from list
        var participants = [];
        $('li.participant').each(function(i, elem) {
            participants.push($(elem).text());
        });
        
				console.log('Connecting to participants...');
				// connect to remote peer
        for (var i = 0; i < participants.length; i++) {
          utilsManyToManyText.room().connect(participants[i], { createDataChannel: 'auto' });
        }
			});
      
      $("#send").click(function (e) {
				e.preventDefault();
        if ($("#message").val() != "") {
          utilsManyToManyText.sendMessage($("#message").val());
          $("#message").val("");
        }
			});
      
      // Hitting enter sends message if not empty
      $("#message").keyup(function(event){
        if(event.keyCode == 13){
          if (this.value != "") {
            utilsManyToManyText.sendMessage($("#message").val());
            this.value = "";
          }
        }
      });

		});

	</script>

<% end %>